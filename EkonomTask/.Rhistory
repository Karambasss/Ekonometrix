install.packages("MASS")
library(MASS)
options(digits=4)
num=38
set.seed(num)
sigma<-matrix(c(1,0.8,0.6,
0.8,1,0.7,
0.6,0.7,1),
nrow=3,ncol=3)
mean<-c(num*15, I(num^2), num+20)
mydata<-mvrnorm(150,mean,sigma)
mydata<-as.data.frame(mydata)
names(mydata)<-c("y","x1","x2")
mydata
install.packages("lmtest")
library(lmtest)
install.packages("forecast")
library(forecast)
install.packages("tseries")
library(tseries)
install.packages("orcutt")
library(orcutt)
install.packages("sandwich")
library(sandwich)
install.packages("psych")
library(psych)
install.packages("regclass")
library(regclass)
install.packages("mctest")
library(mctest)
install.packages("tseries")
install.packages("tseries")
options(digits=4)
num=38
set.seed(num)
sigma<-matrix(c(1,0.8,0.6,
0.8,1,0.7,
0.6,0.7,1),
nrow=3,ncol=3)
mean<-c(num*15, I(num^2), num+20)
mydata<-mvrnorm(150,mean,sigma)
mydata<-as.data.frame(mydata)
names(mydata)<-c("y","x1","x2")
mydata
#write.table(mydata, file = "Фамилия (на англ).txt", sep = "\t")
#write.table(mydata, file = "Фамилия (на англ).txt", sep = "\t")
#write.table(mydata, file = "Фамилия (на англ).txt", sep = "\t")
options(digits=4)
num=43
set.seed(num)
sigma<-matrix(c(1,0.8,0.6,
0.8,1,0.7,
0.6,0.7,1),
nrow=3,ncol=3)
mean<-c(num*15, I(num^2), num+20)
mydata<-mvrnorm(150,mean,sigma)
mydata<-as.data.frame(mydata)
names(mydata)<-c("y","x1","x2")
mydata
write.table(mydata, file = "Petrova.txt", sep = "\t")
test <- mydata[146:150,]
test
options(digits=4)
num=38
set.seed(num)
sigma<-matrix(c(1,0.8,0.6,
0.8,1,0.7,
0.6,0.7,1),
nrow=3,ncol=3)
mean<-c(num*15, I(num^2), num+20)
mydata<-mvrnorm(150,mean,sigma)
mydata<-as.data.frame(mydata)
names(mydata)<-c("y","x1","x2")
mydata
train <- mydata[1:145,]
train
test <- mydata[146:150,]
test
y = mydata$y
y
x1=mydata$x1
x1
x2=mydata$x2
x2
mn_reg = lm(y~x1+x2)
mn_reg
summary(mn_reg)
cor(mn_reg)
cor(mydata)
s_many = summary(mn_reg)
s_many
determ <- s_many$r.squared
determ
adjust_determ <- s_many$adj.r.squared
adjust_determ
st_error <- sqrt(deviance(mn_reg)/df.residual(mn_reg))
st_error
approx <- sum(abs(s_many$residuals/y)) / length(y) * 100
approx
f_test <- s_many$fstatistic[1]
f_test
compare <- data.frame(
Коэффициент_детерминации=determ,
Скорректированный_коэффициент=adjust_determ,
Стандартная_ошибка_модели=st_error,
Ошибка_аппроксимации=approx,
F_тест=f_test
)
print(compare)
s_many = summary(mn_reg)
s_many
print(round(-5.54e+02,3))
print(round(0.07383,3))
setwd('C:/Users/mpapa/Documents/EkonomTask/')
data <- read.table('KuznetsovData.txt', dec = '.', sep = '\t', header = TRUE, encoding = 'utf-8')
data
y <- data$y
x1 <- data$x1
x2 <- data$x2
x3 <- data$x3
y
x1
x2
x3
cor(data) # Корреляционная матрица
# Строю диаграммы рассеяния
plot(y, x1, col = 'red')
plot(y, x3, col = 'green')
# Парная модель
m <- lm(y~x1)
sm <- summary(m)
sm
options(digits=4)
num=38
set.seed(num)
sigma<-matrix(c(1,0.8,0.6,
0.8,1,0.7,
0.6,0.7,1),
nrow=3,ncol=3)
mean<-c(num*15, I(num^2), num+20)
mydata<-mvrnorm(150,mean,sigma)
mydata<-as.data.frame(mydata)
names(mydata)<-c("y","x1","x2")
mydata
y = mydata$y
y
x1=mydata$x1
x1
x2=mydata$x2
x2
mn_reg = lm(y~x1+x2)
mn_reg
s_many = summary(mn_reg)
s_many
cor(mydata)
determ <- s_many$r.squared
determ
adjust_determ <- s_many$adj.r.squared
adjust_determ
st_error <- sqrt(deviance(mn_reg)/df.residual(mn_reg))
st_error
approx <- sum(abs(s_many$residuals/y)) / length(y) * 100
approx
f_test <- s_many$fstatistic[1]
f_test
compare <- data.frame(
Коэффициент_детерминации=determ,
Скорректированный_коэффициент=adjust_determ,
Стандартная_ошибка_модели=st_error,
Ошибка_аппроксимации=approx,
F_тест=f_test
)
print(compare)
print(round(0.07383,3))
beta1 <- 7.78e-01 # Бета коэффициент для x1
beta1
beta1
delta1 <- cor(y, x1) * beta1 / 0.665 # Дельта коэффициент для x1
delta1
elastic1 <- beta1 * mean(x1) / mean(y) # Коэффициент эластичности для x1
elastic1
beta1 <- 5.04e-03 # Бета коэффициент для x2
beta1
delta1 <- cor(y, x1) * beta1 / 0.665 # Дельта коэффициент для x2
delta1
elastic1 <- beta1 * mean(x1) / mean(y) # Коэффициент эластичности для x2
elastic1
print(round(0.00504,3))
print(round(0.006182,3))
print(round(0.6654,3))
s_many$terms
s_many$cov.unscaled
s_many$coefficients
print(round(-6.42298,3))
print(round(12.68378,3))
print(round(3.057620652
,3))
print(round(0.01277
,3))
m = lm(y~x2)
m
s_m = summary(m)
s_m
waldtest(p_many, m)
waldtest(mn_reg, m)
waldtest(mn_reg, m)
qf(0.95,2,150-3)
waldtest(mn_reg, m)
qf(0.95,2,150-3)
waldtest(mn_reg, m)
qf(0.95,2,150-3)
w = waldtest(mn_reg, m)
w$F
s_m = summary(m)
s_m
s_m$coefficients
s_m$fstatistic
qf(0.95,2,150-3)
VIF(m)
VIF(mn_reg)
vifs = VIF(mn_reg)
vifs
VIF(p_many)
VIF(mn_reg)
gqtest(m, order.by = x2, fraction = 0.25) # Тест Голдфельда-Квандта для x2
gg = gqtest(m, order.by = x2, fraction = 0.25) # Тест Голдфельда-Квандта для x2
gg$statistic
gg = gqtest(m, order.by = x2, fraction = 0.25) # Тест Голдфельда-Квандта для x2
gg$statistic
gg$parameter
gg$method
gg$p.value
dwtest(m) # Тест Дарбина-Ватсона
d = dwtest(m) # Тест Дарбина-Ватсона
d$statistic
bgtest(m, order = 1, order.by = NULL, type = c("Chisq", "F")) # Тест Бреуша-Годфри
b = bgtest(m, order = 1, order.by = NULL, type = c("Chisq", "F")) # Тест Бреуша-Годфри
b$statistic
b$p.value
VIF(mn_reg)
