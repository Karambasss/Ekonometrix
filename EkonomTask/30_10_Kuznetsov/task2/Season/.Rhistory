confint(p_many, level = 0.95) # Доверительные интервалы
determ <- s_many$r.squared
adjust_determ <- s_many$adj.r.squared
st_error <- error_many
approx <- A_many
f_test <- s_many$fstatistic[1]
# Проверьте значимость модели регрессии в целом и каждого коэффициента модели по отдельности.
compare <- data.frame(
Коэффициент_детерминации=determ,
Скорректированный_коэффициент=adjust_determ,
Стандартная_ошибка_модели=st_error,
Ошибка_аппроксимации=approx,
F_тест=f_test
)
print(compare)
#прогнозирование по модели с фиктивными переменными
pred=data.frame(c(41,42,43,44,45,46,47,48),c(1,0,0,0,1,0,0,0),c(0,1,0,0,0,1,0,0),c(0,0,1,0,0,0,1,0))
colnames(pred)=c("x1","x2","x3","x4")
predictIP=predict(p_many, newdata = pred)
predictIP
pred
install.packages("lmtest")
install.packages("forecast")
install.packages("tseries")
install.packages("car")
setwd("C:/Users/mpapa/Documents/EkonomTask/30_10_Kuznetsov/task2/Fict_var")
data <- read.table("data_fict.txt", dec = ',', fileEncoding = 'utf-8', header = TRUE)
data
y <- data$IP
x1 <- data$t
x2 <- data$d1
x3 <- data$d2
x4 <- data$d3
# Корреляционная матрица
cor(data)
# Диаграммы рассеяния
plot(y, x1, col = 'black')
plot(y, x2, col= 'red')
plot(y, x3, col = 'blue')
plot(y, x4, col = 'orange')
p_many <- lm(y~x1+x2+x3+x4)
s_many <- summary(p_many)
s_many
A_many <- sum(abs(s_many$residuals/y)) / length(y) * 100 # Апроксимация
A_many
error_many <- sqrt(deviance(p_many)/df.residual(p_many))
confint(p_many, level = 0.95) # Доверительные интервалы
determ <- s_many$r.squared
adjust_determ <- s_many$adj.r.squared
st_error <- error_many
approx <- A_many
f_test <- s_many$fstatistic[1]
# Проверьте значимость модели регрессии в целом и каждого коэффициента модели по отдельности.
compare <- data.frame(
Коэффициент_детерминации=determ,
Скорректированный_коэффициент=adjust_determ,
Стандартная_ошибка_модели=st_error,
Ошибка_аппроксимации=approx,
F_тест=f_test
)
print(compare)
#прогнозирование по модели с фиктивными переменными
pred=data.frame(c(41,42,43,44,45,46,47,48),c(1,0,0,0,1,0,0,0),c(0,1,0,0,0,1,0,0),c(0,0,1,0,0,0,1,0))
colnames(pred)=c("x1","x2","x3","x4")
predictIP=predict(p_many, newdata = pred)
predictIP
pred
install.packages("lmtest")
library(lmtest)
install.packages("forecast")
library(forecast)
install.packages("tseries")
library(tseries)
install.packages("car")
library(car)
setwd("C:/Users/mpapa/Documents/EkonomTask/30_10_Kuznetsov/task2/Fict_var")
data <- read.table("data_fict.txt", dec = ',', fileEncoding = 'utf-8', header = TRUE)
data
y <- data$IP
x1 <- data$t
x2 <- data$d1
x3 <- data$d2
x4 <- data$d3
# РљРѕСЂСЂРµР»СЏС†РёРѕРЅРЅР°СЏ РјР°С‚СЂРёС†Р°
cor(data)
# Р”РёР°РіСЂР°РјРјС‹ СЂР°СЃСЃРµСЏРЅРёСЏ
plot(y, x1, col = 'black')
plot(y, x2, col= 'red')
plot(y, x3, col = 'blue')
plot(y, x4, col = 'orange')
p_many <- lm(y~x1+x2+x3+x4)
s_many <- summary(p_many)
s_many
A_many <- sum(abs(s_many$residuals/y)) / length(y) * 100 # РђРїСЂРѕРєСЃРёРјР°С†РёСЏ
A_many
error_many <- sqrt(deviance(p_many)/df.residual(p_many))
confint(p_many, level = 0.95) # Р”РѕРІРµСЂРёС‚РµР»СЊРЅС‹Рµ РёРЅС‚РµСЂРІР°Р»С‹
determ <- s_many$r.squared
adjust_determ <- s_many$adj.r.squared
st_error <- error_many
approx <- A_many
f_test <- s_many$fstatistic[1]
# РџСЂРѕРІРµСЂСЊС‚Рµ Р·РЅР°С‡РёРјРѕСЃС‚СЊ РјРѕРґРµР»Рё СЂРµРіСЂРµСЃСЃРёРё РІ С†РµР»РѕРј Рё РєР°Р¶РґРѕРіРѕ РєРѕСЌС„С„РёС†РёРµРЅС‚Р° РјРѕРґРµР»Рё РїРѕ РѕС‚РґРµР»СЊРЅРѕСЃС‚Рё.
compare <- data.frame(
РљРѕСЌС„С„РёС†РёРµРЅС‚_РґРµС‚РµСЂРјРёРЅР°С†РёРё=determ,
РЎРєРѕСЂСЂРµРєС‚РёСЂРѕРІР°РЅРЅС‹Р№_РєРѕСЌС„С„РёС†РёРµРЅС‚=adjust_determ,
РЎС‚Р°РЅРґР°СЂС‚РЅР°СЏ_РѕС€РёР±РєР°_РјРѕРґРµР»Рё=st_error,
РћС€РёР±РєР°_Р°РїРїСЂРѕРєСЃРёРјР°С†РёРё=approx,
F_С‚РµСЃС‚=f_test
)
print(compare)
#РїСЂРѕРіРЅРѕР·РёСЂРѕРІР°РЅРёРµ РїРѕ РјРѕРґРµР»Рё СЃ С„РёРєС‚РёРІРЅС‹РјРё РїРµСЂРµРјРµРЅРЅС‹РјРё
pred=data.frame(c(41,42,43,44,45,46,47,48),c(1,0,0,0,1,0,0,0),c(0,1,0,0,0,1,0,0),c(0,0,1,0,0,0,1,0))
colnames(pred)=c("x1","x2","x3","x4")
predictIP=predict(p_many, newdata = pred)
predictIP
pred
install.packages("lmtest")
install.packages("forecast")
install.packages("tseries")
install.packages("car")
setwd("C:/Users/mpapa/Documents/EkonomTask/30_10_Kuznetsov/task2/Fict_var")
data <- read.table("data_fict.txt", dec = ',', fileEncoding = 'utf-8', header = TRUE)
data
y <- data$IP
x1 <- data$t
x2 <- data$d1
x3 <- data$d2
x4 <- data$d3
# Корреляционная матрица
cor(data)
# Диаграммы рассеяния
plot(y, x1, col = 'black')
plot(y, x2, col= 'red')
plot(y, x3, col = 'blue')
plot(y, x4, col = 'orange')
p_many <- lm(y~x1+x2+x3+x4)
s_many <- summary(p_many)
s_many
A_many <- sum(abs(s_many$residuals/y)) / length(y) * 100 # Апроксимация
A_many
error_many <- sqrt(deviance(p_many)/df.residual(p_many))
confint(p_many, level = 0.95) # Доверительные интервалы
determ <- s_many$r.squared
adjust_determ <- s_many$adj.r.squared
st_error <- error_many
approx <- A_many
f_test <- s_many$fstatistic[1]
# Проверьте значимость модели регрессии в целом и каждого коэффициента модели по отдельности.
compare <- data.frame(
Коэффициент_детерминации=determ,
Скорректированный_коэффициент=adjust_determ,
Стандартная_ошибка_модели=st_error,
Ошибка_аппроксимации=approx,
F_тест=f_test
)
print(compare)
#прогнозирование по модели с фиктивными переменными
pred=data.frame(c(41,42,43,44,45,46,47,48),c(1,0,0,0,1,0,0,0),c(0,1,0,0,0,1,0,0),c(0,0,1,0,0,0,1,0))
colnames(pred)=c("x1","x2","x3","x4")
predictIP=predict(p_many, newdata = pred)
predictIP
pred
setwd("C:/Users/mpapa/Documents/EkonomTask/30_10_Kuznetsov/task2/Season")
data <- read.table("data_fict.txt",dec = ',', fileEncoding = 'utf-8', header = TRUE)
data2 <- read.table("data_fict.txt",dec = ',', fileEncoding = 'utf-8', header = TRUE)
data3 <- read.table("data_season.txt",dec = ',', fileEncoding = 'utf-8', header = TRUE)
data
y <- data$IP
x <- data$t
cor(data)
p_many <- lm(y~x)
s_many <- summary(p_many)
e <- s_many$residuals
e
s_many
A_many <- sum(abs(s_many$residuals/y)) / length(y) * 100 # Апроксимация
A_many
error_many <- sqrt(deviance(p_many)/df.residual(p_many))
determ <- s_many$r.squared
adjust_determ <- s_many$adj.r.squared
st_error <- error_many
approx <- A_many
f_test <- s_many$fstatistic[1]
data['e'] = data.frame(e)
data['Остаток'] = 0
#Работа с устреденеием остатков
ost1 = sum(data[data$Q == 1,]$e)/10
ost1
ost2 = sum(data[data$Q == 2,]$e)/10
ost2
ost3 = sum(data[data$Q == 3,]$e)/10
ost3
ost4 = sum(data[data$Q == 4,]$e)/10
ost4
# Добавление столбца с сезонными составляющими-остатками
data[data$Q == 1,]$Остаток = ost1
data[data$Q == 2,]$Остаток = ost2
data[data$Q == 3,]$Остаток = ost3
data[data$Q == 4,]$Остаток = ost4
data$IP <- (data$IP - data$Остаток)
m2 = lm(IP~t, data=data2)
plot(data$IP, col="red") #график
#прогнозирование по модели
predictIP = predict(m2, newdata = data3)
plot(data$IP, col="red") #график
setwd("C:/Users/mpapa/Documents/EkonomTask/30_10_Kuznetsov/task2/Fict_var")
data <- read.table("data_fict.txt", dec = ',', fileEncoding = 'utf-8', header = TRUE)
data
y <- data$IP
x1 <- data$t
x2 <- data$d1
x3 <- data$d2
x4 <- data$d3
# Корреляционная матрица
cor(data)
#Строим графики
plot(y, col = 'red')
plot(y, x1, col="orange")
plot(GDP1,col="red")
GDP1
data <- read.table("dannie.txt", dec = ',', fileEncoding = 'utf-8', header = TRUE)
data
y=data$GDP
y
x1=data$t
x1
x2=data$df1
x2
x3=data$df2
x3
x4=data$df3
x4
# Корреляционная матрица
cor(data)
#Строим графики
plot(y, col = 'red')
plot(y, x1, col="orange")
# Множественная модель
pm <- lm(y~x1+x2+x3+x4)
pm
spm <- summary(pm)
spm
confint(pm, level = 0.95) # Доверительные интервалы
A2 <- sum(abs(spm$residuals/y)) / length(y) * 100 # Апроксимация
A2
error_many <- sqrt(deviance(pm)/df.residual(pm)) #Ст ошибка
error_many
determ <- spm$r.squared
adjust_determ <- spm$adj.r.squared
st_error <- error_many
approx <- A2
f_test <- spm$fstatistic[1]
compare <- data.frame(
Коэффициент_детерминации=determ,
Скорректированный_коэффициент=adjust_determ,
Стандартная_ошибка_модели=st_error,
Ошибка_аппроксимации=approx,
F_тест=f_test
)
print(compare)
#прогнозирование по модели с фиктивными переменными
pred<-data.frame(c(41,42,43),c(1,0,0),c(0,1,0),c(0,0,1)) # Строим прогноз на новый 2019 год
pred
colnames(pred)<-c("x1","x2","x3","x4")
pred
predictGDP<-predict(pm,newdata = pred)
predictGDP
#Строим временной ряд
GDP<-c(y)
GDP
GDP1<-ts(data=GDP,start=c(2009), name="GDP", frequency = 4)
GDP1
plot(GDP1,col="red")
install.packages("lmtest")
install.packages("lmtest")
library(lmtest)
install.packages("forecast")
install.packages("forecast")
library(forecast)
install.packages("tseries")
install.packages("tseries")
library(tseries)
setwd("C:/Users/mpapa/Documents/EkonomTask/30_10_Kuznetsov/")
data <- read.table("dannie.txt", dec = ',', fileEncoding = 'utf-8', header = TRUE)
data
y=data$GDP
y
x1=data$t
x1
x2=data$df1
x2
x3=data$df2
x3
x4=data$df3
x4
# Корреляционная матрица
cor(data)
#Строим графики
plot(y, col = 'red')
plot(y, x1, col="orange")
# Множественная модель
pm <- lm(y~x1+x2+x3+x4)
pm
spm <- summary(pm)
spm
confint(pm, level = 0.95) # Доверительные интервалы
A2 <- sum(abs(spm$residuals/y)) / length(y) * 100 # Апроксимация
#Строим графики
plot(y, col = 'red')
plot(y, x1, col="orange")
# Диаграммы рассеяния
plot(y, x1, col = 'black')
setwd("C:/Users/mpapa/Documents/EkonomTask/30_10_Kuznetsov/task2/Fict_var")
data <- read.table("data_fict.txt", dec = ',', fileEncoding = 'utf-8', header = TRUE)
data
y <- data$IP
x1 <- data$t
x2 <- data$d1
x3 <- data$d2
x4 <- data$d3
# Корреляционная матрица
cor(data)
# Диаграммы рассеяния
plot(y, x1, col = 'black')
plot(y, x2, col= 'red')
plot(y, x3, col = 'blue')
plot(y, x4, col = 'orange')
p_many <- lm(y~x1+x2+x3+x4)
s_many <- summary(p_many)
s_many
A_many <- sum(abs(s_many$residuals/y)) / length(y) * 100 # Апроксимация
A_many
error_many <- sqrt(deviance(p_many)/df.residual(p_many))
confint(p_many, level = 0.95) # Доверительные интервалы
determ <- s_many$r.squared
adjust_determ <- s_many$adj.r.squared
st_error <- error_many
approx <- A_many
f_test <- s_many$fstatistic[1]
# Проверьте значимость модели регрессии в целом и каждого коэффициента модели по отдельности.
compare <- data.frame(
Коэффициент_детерминации=determ,
Скорректированный_коэффициент=adjust_determ,
Стандартная_ошибка_модели=st_error,
Ошибка_аппроксимации=approx,
F_тест=f_test
)
print(compare)
#прогнозирование по модели с фиктивными переменными
pred=data.frame(c(41,42,43,44,45,46,47,48),c(1,0,0,0,1,0,0,0),c(0,1,0,0,0,1,0,0),c(0,0,1,0,0,0,1,0))
colnames(pred)=c("x1","x2","x3","x4")
predictIP=predict(p_many, newdata = pred)
predictIP
pred
setwd("C:/Users/mpapa/Documents/EkonomTask/30_10_Kuznetsov/task2/Season")
data <- read.table("data_fict.txt",dec = ',', fileEncoding = 'utf-8', header = TRUE)
data2 <- read.table("data_fict.txt",dec = ',', fileEncoding = 'utf-8', header = TRUE)
data3 <- read.table("data_season.txt",dec = ',', fileEncoding = 'utf-8', header = TRUE)
data
y <- data$IP
x <- data$t
cor(data)
p_many <- lm(y~x)
s_many <- summary(p_many)
e <- s_many$residuals
e
s_many
A_many <- sum(abs(s_many$residuals/y)) / length(y) * 100 # Апроксимация
A_many
error_many <- sqrt(deviance(p_many)/df.residual(p_many))
determ <- s_many$r.squared
adjust_determ <- s_many$adj.r.squared
st_error <- error_many
approx <- A_many
f_test <- s_many$fstatistic[1]
data['e'] = data.frame(e)
data['Остаток'] = 0
#Работа с устреденеием остатков
ost1 = sum(data[data$Q == 1,]$e)/10
ost1
ost2 = sum(data[data$Q == 2,]$e)/10
ost2
ost3 = sum(data[data$Q == 3,]$e)/10
ost3
ost4 = sum(data[data$Q == 4,]$e)/10
ost4
# Добавление столбца с сезонными составляющими-остатками
data[data$Q == 1,]$Остаток = ost1
data[data$Q == 2,]$Остаток = ost2
data[data$Q == 3,]$Остаток = ost3
data[data$Q == 4,]$Остаток = ost4
data$IP <- (data$IP - data$Остаток)
m2 = lm(IP~t, data=data2)
plot(data$IP, col="red") #график
#прогнозирование по модели
predictIP = predict(m2, newdata = data3)
predictIP
data3['Прогнозирование'] = data.frame(predictIP)
data3
write.csv(data3,"./data_season_results.csv", row.names = TRUE)
install.packages("lmtest")
library(lmtest)
install.packages("forecast")
library(forecast)
install.packages("tseries")
library(tseries)
install.packages("car")
library(car)
setwd("C:/Users/mpapa/Documents/EkonomTask/30_10_Kuznetsov/task2/Fict_var")
data <- read.table("data_fict.txt", dec = ',', fileEncoding = 'utf-8', header = TRUE)
data
y <- data$IP
x1 <- data$t
x2 <- data$d1
x3 <- data$d2
x4 <- data$d3
# Корреляционная матрица
cor(data)
# Диаграммы рассеяния
plot(y, x1, col = 'black')
plot(y, x2, col= 'red')
plot(y, x3, col = 'blue')
plot(y, x4, col = 'orange')
p_many <- lm(y~x1+x2+x3+x4)
s_many <- summary(p_many)
s_many
A_many <- sum(abs(s_many$residuals/y)) / length(y) * 100 # Апроксимация
A_many
error_many <- sqrt(deviance(p_many)/df.residual(p_many))
confint(p_many, level = 0.95) # Доверительные интервалы
determ <- s_many$r.squared
adjust_determ <- s_many$adj.r.squared
st_error <- error_many
approx <- A_many
f_test <- s_many$fstatistic[1]
# Проверьте значимость модели регрессии в целом и каждого коэффициента модели по отдельности.
compare <- data.frame(
Коэффициент_детерминации=determ,
Скорректированный_коэффициент=adjust_determ,
Стандартная_ошибка_модели=st_error,
Ошибка_аппроксимации=approx,
F_тест=f_test
)
print(compare)
#прогнозирование по модели с фиктивными переменными
pred=data.frame(c(41,42,43,44,45,46,47,48),c(1,0,0,0,1,0,0,0),c(0,1,0,0,0,1,0,0),c(0,0,1,0,0,0,1,0))
colnames(pred)=c("x1","x2","x3","x4")
predictIP=predict(p_many, newdata = pred)
predictIP
pred
install.packages("lmtest")
library(lmtest)
install.packages("forecast")
library(forecast)
install.packages("tseries")
library(tseries)
install.packages("car")
library(car)
setwd("C:/Users/mpapa/Documents/EkonomTask/30_10_Kuznetsov/task2/Season")
data <- read.table("data_fict.txt",dec = ',', fileEncoding = 'utf-8', header = TRUE)
data2 <- read.table("data_fict.txt",dec = ',', fileEncoding = 'utf-8', header = TRUE)
data3 <- read.table("data_season.txt",dec = ',', fileEncoding = 'utf-8', header = TRUE)
data
y <- data$IP
x <- data$t
cor(data)
p_many <- lm(y~x)
s_many <- summary(p_many)
e <- s_many$residuals
e
s_many
A_many <- sum(abs(s_many$residuals/y)) / length(y) * 100 # Апроксимация
A_many
error_many <- sqrt(deviance(p_many)/df.residual(p_many))
determ <- s_many$r.squared
adjust_determ <- s_many$adj.r.squared
st_error <- error_many
approx <- A_many
f_test <- s_many$fstatistic[1]
data['e'] = data.frame(e)
data['Остаток'] = 0
#Работа с устреденеием остатков
ost1 = sum(data[data$Q == 1,]$e)/10
ost1
ost2 = sum(data[data$Q == 2,]$e)/10
ost2
ost3 = sum(data[data$Q == 3,]$e)/10
ost3
ost4 = sum(data[data$Q == 4,]$e)/10
ost4
# Добавление столбца с сезонными составляющими-остатками
data[data$Q == 1,]$Остаток = ost1
data[data$Q == 2,]$Остаток = ost2
data[data$Q == 3,]$Остаток = ost3
data[data$Q == 4,]$Остаток = ost4
data$IP <- (data$IP - data$Остаток)
m2 = lm(IP~t, data=data2)
plot(data$IP, col="red") #график
#прогнозирование по модели
predictIP = predict(m2, newdata = data3)
predictIP
data3['Прогнозирование'] = data.frame(predictIP)
data3
write.csv(data3,"./data_season_results.csv", row.names = TRUE)
install.packages("lmtest")
install.packages("forecast")
install.packages("tseries")
install.packages("car")
data3['Прогнозирование'] = data.frame(predictIP)
data3
write.csv(data3,"./data_season_results.csv", row.names = TRUE)
